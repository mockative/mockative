name: Release

on:
  workflow_dispatch:
  release:
    types: [ created ]

env:
  SONATYPE_BASE_URL: https://s01.oss.sonatype.org/service/local/

jobs:
  create-staging-repository:
    runs-on: ubuntu-latest
    name: Create staging repository
    outputs:
      repository-id: ${{ steps.create.outputs.repository_id }}
    steps:
      - id: create
        name: Create staging repository
        uses: nexus-actions/create-nexus-staging-repo@v1.3.0
        with:
          username: ${{ secrets.SONATYPE_USERNAME }}
          password: ${{ secrets.SONATYPE_PASSWORD }}
          staging_profile_id: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
          base_url: ${{ env.SONATYPE_BASE_URL }}
          description: Created by Release (Create staging repository) for mockative/mockative

  publish-on-macos:
    runs-on: macos-15
    needs:
      - create-staging-repository
    env:
      DEVELOPER_DIR: /Applications/Xcode_16.app/Contents/Developer
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Publish Plugin to Maven Local
        run: |
            ./gradlew :mockative-plugin:publishToMavenLocal \
              -Pmockative.projects=':mockative-plugin'

      - name: Publish Framework to Maven Central
        shell: bash
        run: |
          ./gradlew publishAllPublicationsToSonatypeRepository \
            -Psigning.key='${{ secrets.SIGNING_KEY }}' \
            -Psigning.keyId='${{ secrets.SIGNING_KEY_ID }}' \
            -Psigning.password='${{ secrets.SIGNING_PASSWORD }}' \
            -Psonatype.username='${{ secrets.SONATYPE_USERNAME }}' \
            -Psonatype.password='${{ secrets.SONATYPE_PASSWORD }}' \
            -Psonatype.repository='${{ needs.create-staging-repository.outputs.repository-id }}'

      - name: Publish Plugin to Gradle Plugin Portal
        shell: bash
        run: |
          ./gradlew publishPlugins \
            -Pmockative.projects=':mockative-plugin'
            -Psigning.key='${{ secrets.SIGNING_KEY }}' \
            -Psigning.keyId='${{ secrets.SIGNING_KEY_ID }}' \
            -Pgradle.publish.key='${{ secrets.GRADLE_PUBLISH_KEY }}' \
            -Pgradle.publish.secret='${{ secrets.GRADLE_PUBLISH_SECRET }}'

  macos-host-check:
    name: Check on macOS
    runs-on: macos-15
    needs:
      - create-staging-repository
      - publish-on-macos
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Check
        run: |
          ./gradlew :tools:check-publication:build \
            -Pmockative.projects=':tools:check-publication' \
            -Psonatype.username='${{ secrets.SONATYPE_USERNAME }}' \
            -Psonatype.password='${{ secrets.SONATYPE_PASSWORD }}' \
            -Psonatype.repository='${{ needs.create-staging-repository.outputs.repository-id }}'

  close-staging-repository:
    runs-on: ubuntu-latest
    needs:
      - create-staging-repository
      - macos-host-check
    if: ${{ always() && needs.create-staging-repository.result == 'success' }}
    steps:
#      - name: Discard
#        if: ${{ needs.macos-host-check.result != 'success' }}
#        uses: nexus-actions/drop-nexus-staging-repo@v1
#        with:
#          username: ${{ secrets.SONATYPE_USERNAME }}
#          password: ${{ secrets.SONATYPE_PASSWORD }}
#          base_url: ${{ env.SONATYPE_BASE_URL }}
#          staging_repository_id: ${{ needs.create-staging-repository.outputs.repository-id }}

      - name: Close
        if: ${{ needs.macos-host-check.result == 'success' }}
        uses: nexus-actions/release-nexus-staging-repo@v1.3.0
        with:
          username: ${{ secrets.SONATYPE_USERNAME }}
          password: ${{ secrets.SONATYPE_PASSWORD }}
          staging_repository_id: ${{ needs.create-staging-repository.outputs.repository-id }}
          base_url: ${{ env.SONATYPE_BASE_URL }}
          close_only: true
